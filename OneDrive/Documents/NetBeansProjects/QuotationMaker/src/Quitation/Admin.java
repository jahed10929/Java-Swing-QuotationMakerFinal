/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Quitation;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.ResultSet;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author jahed
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    String Imagepath;

    public Admin() {
        initComponents();
        ShowDataIntable();
        ShowDataInproducttable();
    }

    public ArrayList<EmployeeDataTable> EmployeeList() {
        ArrayList<EmployeeDataTable> EmployeeList = new ArrayList<EmployeeDataTable>();
        Connection con = DBConnection.getConnection();
        String query = "SELECT * FROM `user`";
        Statement st;
        ResultSet rs;
        try {
            st = (Statement) con.createStatement();
            rs = st.executeQuery(query);
            EmployeeDataTable employeedata;

            while (rs.next()) {
                employeedata = new EmployeeDataTable(rs.getInt("id"),
                        rs.getString("EmployeeName"),
                        rs.getString("EmployeeAddress"),
                        rs.getString("mobile"),
                        rs.getString("Username"),
                        rs.getString("password"));
                EmployeeList.add(employeedata);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        return EmployeeList;
    }

    public ArrayList<ProductdataTable> ProductList() {
        ArrayList<ProductdataTable> ProductList = new ArrayList<ProductdataTable>();
        Connection con = DBConnection.getConnection();
        String query = "SELECT * FROM `product` WHERE `Catagory` = "+"\""+(String)CatagoryOption.getSelectedItem()+"\"";
        
        Statement st;
        ResultSet rs;
        try {
            st = (Statement) con.createStatement();
            rs = st.executeQuery(query);
            ProductdataTable productdata;
            while (rs.next()) {
                productdata = new ProductdataTable(rs.getInt("id"),
                        rs.getString("Discription"),
                        rs.getString("Catagory"),
                        rs.getString("unit"),
                        rs.getFloat("price"));
                ProductList.add(productdata);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
        return ProductList;
    }

    private void ShowDataIntable() {
        ArrayList<EmployeeDataTable> list = EmployeeList();
        DefaultTableModel model = (DefaultTableModel) EmployeeInfoTable.getModel();
        Object[] row = new Object[6];
        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getId();
            row[1] = list.get(i).getname();
            row[2] = list.get(i).getaddress();
            row[3] = list.get(i).getmobile();
            row[4] = list.get(i).getuser();
            row[5] = list.get(i).getpass();

            model.addRow(row);
        }
    }

    private void ShowDataInproducttable() {
        ArrayList<ProductdataTable> list = ProductList();
        DefaultTableModel model = (DefaultTableModel) AdminProductTable.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getId();
            row[1] = list.get(i).getDiscription();
            row[2] = list.get(i).getCatagory();
            row[3] = list.get(i).getUnit();
            row[4] = list.get(i).getPrice();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BackgroundPanal = new javax.swing.JPanel();
        HadingPanal = new javax.swing.JPanel();
        Q1 = new javax.swing.JLabel();
        Q2 = new javax.swing.JLabel();
        CreateProfileHading = new javax.swing.JLabel();
        Exit = new javax.swing.JLabel();
        min = new javax.swing.JLabel();
        AdminLogout = new javax.swing.JLabel();
        MainTabbpane = new javax.swing.JTabbedPane();
        profile = new javax.swing.JPanel();
        MainPanal = new javax.swing.JPanel();
        CompanyAdd = new javax.swing.JLabel();
        CompanyName = new javax.swing.JLabel();
        Clogo = new javax.swing.JLabel();
        AdminUserName = new javax.swing.JLabel();
        AdminPass = new javax.swing.JLabel();
        Conpass = new javax.swing.JLabel();
        CompanynameText = new javax.swing.JTextField();
        CompanyAddressText = new javax.swing.JTextField();
        UserNamText = new javax.swing.JTextField();
        AdminPass2 = new javax.swing.JPasswordField();
        AdminPass1 = new javax.swing.JPasswordField();
        picSpace = new javax.swing.JLabel();
        UdateAdminPro = new javax.swing.JButton();
        AdminBrowsepic = new javax.swing.JButton();
        ShowAdminPass = new javax.swing.JCheckBox();
        AdminTabbHader = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Employee = new javax.swing.JPanel();
        ShowEmployeeData = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        EmployeeInfoTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        PassRepeatlabale = new javax.swing.JLabel();
        EmployeeUsernamelabale = new javax.swing.JLabel();
        EmployeeMobilelabale = new javax.swing.JLabel();
        EmployeeAddressLabel = new javax.swing.JLabel();
        EmployeeNamelabale = new javax.swing.JLabel();
        EmployeeUserNameText = new javax.swing.JTextField();
        EmployeePasslabale1 = new javax.swing.JLabel();
        EmployeeAddressText = new javax.swing.JTextField();
        EmployeeNameText = new javax.swing.JTextField();
        EmployeeMobileText = new javax.swing.JTextField();
        EmployeePassFild2 = new javax.swing.JPasswordField();
        EmployeePassFild1 = new javax.swing.JPasswordField();
        ShowPass = new javax.swing.JCheckBox();
        EmpUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        EmpDelet = new javax.swing.JButton();
        EmpSave = new javax.swing.JButton();
        Id = new javax.swing.JLabel();
        Product = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ProductCatagoryLabale = new javax.swing.JLabel();
        EmployeeMobilelabale1 = new javax.swing.JLabel();
        EmployeeAddressLabel1 = new javax.swing.JLabel();
        EmployeeNamelabale1 = new javax.swing.JLabel();
        ProductPriceText = new javax.swing.JTextField();
        proId = new javax.swing.JLabel();
        Update = new javax.swing.JButton();
        ProSave = new javax.swing.JButton();
        UnitOption = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductDiscription = new javax.swing.JTextArea();
        CatagoryOption = new javax.swing.JComboBox<>();
        AddProduct1 = new javax.swing.JLabel();
        ProDelet = new javax.swing.JButton();
        ShowEmployeeData1 = new javax.swing.JPanel();
        AllProduct = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AdminProductTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(24, 33, 43));
        setUndecorated(true);

        BackgroundPanal.setBackground(new java.awt.Color(24, 33, 43));
        BackgroundPanal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));

        HadingPanal.setBackground(new java.awt.Color(24, 33, 43));
        HadingPanal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 3, true));
        HadingPanal.setLayout(null);

        Q1.setBackground(new java.awt.Color(24, 33, 43));
        Q1.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        Q1.setForeground(new java.awt.Color(255, 255, 255));
        Q1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Q1.setText("Quotation");
        HadingPanal.add(Q1);
        Q1.setBounds(0, 0, 100, 30);

        Q2.setBackground(new java.awt.Color(24, 33, 43));
        Q2.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        Q2.setForeground(new java.awt.Color(255, 255, 255));
        Q2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Q2.setText("     Maker.");
        HadingPanal.add(Q2);
        Q2.setBounds(0, 16, 100, 30);

        CreateProfileHading.setBackground(new java.awt.Color(24, 33, 43));
        CreateProfileHading.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        CreateProfileHading.setForeground(new java.awt.Color(255, 255, 255));
        CreateProfileHading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CreateProfileHading.setText("Admin");
        HadingPanal.add(CreateProfileHading);
        CreateProfileHading.setBounds(430, 0, 180, 50);

        Exit.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        Exit.setForeground(new java.awt.Color(255, 255, 255));
        Exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Exit.setText("X");
        Exit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        Exit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExitMouseExited(evt);
            }
        });
        HadingPanal.add(Exit);
        Exit.setBounds(1020, 10, 30, 30);

        min.setBackground(new java.awt.Color(24, 33, 43));
        min.setFont(new java.awt.Font("Comic Sans MS", 2, 36)); // NOI18N
        min.setForeground(new java.awt.Color(255, 255, 255));
        min.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        min.setText("-");
        min.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        min.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        min.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                minMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                minMouseExited(evt);
            }
        });
        HadingPanal.add(min);
        min.setBounds(970, 10, 40, 30);

        AdminLogout.setBackground(new java.awt.Color(24, 33, 43));
        AdminLogout.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        AdminLogout.setForeground(new java.awt.Color(255, 255, 255));
        AdminLogout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AdminLogout.setText("Logout");
        AdminLogout.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        AdminLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminLogoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                AdminLogoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                AdminLogoutMouseExited(evt);
            }
        });
        HadingPanal.add(AdminLogout);
        AdminLogout.setBounds(880, 10, 80, 30);

        MainTabbpane.setBackground(new java.awt.Color(24, 33, 43));
        MainTabbpane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        MainTabbpane.setForeground(new java.awt.Color(255, 255, 255));
        MainTabbpane.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        MainTabbpane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        MainTabbpane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MainTabbpane.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N

        profile.setBackground(new java.awt.Color(24, 33, 43));
        profile.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        profile.setForeground(new java.awt.Color(255, 255, 255));
        profile.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        profile.setLayout(null);

        MainPanal.setBackground(new java.awt.Color(234, 236, 238));
        MainPanal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        MainPanal.setLayout(null);

        CompanyAdd.setBackground(new java.awt.Color(24, 33, 43));
        CompanyAdd.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        CompanyAdd.setText("Company addres");
        MainPanal.add(CompanyAdd);
        CompanyAdd.setBounds(10, 60, 190, 40);

        CompanyName.setBackground(new java.awt.Color(24, 33, 43));
        CompanyName.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        CompanyName.setText("Company name");
        MainPanal.add(CompanyName);
        CompanyName.setBounds(10, 10, 190, 40);

        Clogo.setBackground(new java.awt.Color(24, 33, 43));
        Clogo.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Clogo.setText("Company logo");
        MainPanal.add(Clogo);
        Clogo.setBounds(10, 320, 190, 40);

        AdminUserName.setBackground(new java.awt.Color(24, 33, 43));
        AdminUserName.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AdminUserName.setText("Admin User name");
        MainPanal.add(AdminUserName);
        AdminUserName.setBounds(10, 110, 190, 40);

        AdminPass.setBackground(new java.awt.Color(24, 33, 43));
        AdminPass.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AdminPass.setText("Admin Password");
        MainPanal.add(AdminPass);
        AdminPass.setBounds(10, 160, 190, 40);

        Conpass.setBackground(new java.awt.Color(24, 33, 43));
        Conpass.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Conpass.setText("Confirm Password");
        MainPanal.add(Conpass);
        Conpass.setBounds(10, 210, 190, 40);

        CompanynameText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        CompanynameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CompanynameText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        CompanynameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompanynameTextActionPerformed(evt);
            }
        });
        MainPanal.add(CompanynameText);
        CompanynameText.setBounds(210, 10, 310, 40);

        CompanyAddressText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        CompanyAddressText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CompanyAddressText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        CompanyAddressText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CompanyAddressTextActionPerformed(evt);
            }
        });
        MainPanal.add(CompanyAddressText);
        CompanyAddressText.setBounds(210, 60, 310, 40);

        UserNamText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        UserNamText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        UserNamText.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        UserNamText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserNamTextActionPerformed(evt);
            }
        });
        MainPanal.add(UserNamText);
        UserNamText.setBounds(210, 110, 310, 40);

        AdminPass2.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AdminPass2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AdminPass2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        AdminPass2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminPass2ActionPerformed(evt);
            }
        });
        MainPanal.add(AdminPass2);
        AdminPass2.setBounds(210, 210, 310, 40);

        AdminPass1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AdminPass1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AdminPass1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        AdminPass1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminPass1ActionPerformed(evt);
            }
        });
        MainPanal.add(AdminPass1);
        AdminPass1.setBounds(210, 160, 310, 40);

        picSpace.setBackground(new java.awt.Color(44, 53, 63));
        picSpace.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        MainPanal.add(picSpace);
        picSpace.setBounds(210, 280, 250, 120);

        UdateAdminPro.setBackground(new java.awt.Color(234, 236, 238));
        UdateAdminPro.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        UdateAdminPro.setText("Save");
        UdateAdminPro.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        UdateAdminPro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UdateAdminPro.setFocusPainted(false);
        UdateAdminPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UdateAdminProActionPerformed(evt);
            }
        });
        MainPanal.add(UdateAdminPro);
        UdateAdminPro.setBounds(250, 430, 130, 30);

        AdminBrowsepic.setBackground(new java.awt.Color(234, 236, 238));
        AdminBrowsepic.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        AdminBrowsepic.setText("Browse");
        AdminBrowsepic.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        AdminBrowsepic.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AdminBrowsepic.setFocusPainted(false);
        AdminBrowsepic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdminBrowsepicActionPerformed(evt);
            }
        });
        MainPanal.add(AdminBrowsepic);
        AdminBrowsepic.setBounds(470, 320, 70, 30);

        ShowAdminPass.setBackground(new java.awt.Color(234, 236, 238));
        ShowAdminPass.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        ShowAdminPass.setText("Show Password");
        ShowAdminPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowAdminPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAdminPassActionPerformed(evt);
            }
        });
        MainPanal.add(ShowAdminPass);
        ShowAdminPass.setBounds(210, 250, 220, 20);

        profile.add(MainPanal);
        MainPanal.setBounds(210, 70, 560, 480);

        AdminTabbHader.setBackground(new java.awt.Color(234, 236, 238));
        AdminTabbHader.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 3, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Update Admin profile");

        javax.swing.GroupLayout AdminTabbHaderLayout = new javax.swing.GroupLayout(AdminTabbHader);
        AdminTabbHader.setLayout(AdminTabbHaderLayout);
        AdminTabbHaderLayout.setHorizontalGroup(
            AdminTabbHaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 558, Short.MAX_VALUE)
            .addGroup(AdminTabbHaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE))
        );
        AdminTabbHaderLayout.setVerticalGroup(
            AdminTabbHaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
            .addGroup(AdminTabbHaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(AdminTabbHaderLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        profile.add(AdminTabbHader);
        AdminTabbHader.setBounds(210, 10, 560, 50);

        MainTabbpane.addTab("Profile", profile);

        Employee.setBackground(new java.awt.Color(24, 33, 43));
        Employee.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        Employee.setLayout(null);

        ShowEmployeeData.setBackground(new java.awt.Color(234, 236, 238));
        ShowEmployeeData.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        ShowEmployeeData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowEmployeeData.setLayout(null);

        EmployeeInfoTable.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        EmployeeInfoTable.setFont(new java.awt.Font("Comic Sans MS", 2, 14)); // NOI18N
        EmployeeInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name", "Address", "mobile", "User name", "pass"
            }
        ));
        EmployeeInfoTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmployeeInfoTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EmployeeInfoTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(EmployeeInfoTable);

        ShowEmployeeData.add(jScrollPane2);
        jScrollPane2.setBounds(0, 62, 960, 200);

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Select Employee to update/delete");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        ShowEmployeeData.add(jLabel3);
        jLabel3.setBounds(-10, 0, 980, 40);

        Employee.add(ShowEmployeeData);
        ShowEmployeeData.setBounds(10, 10, 960, 260);

        jPanel1.setBackground(new java.awt.Color(234, 236, 238));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel1.setLayout(null);

        PassRepeatlabale.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        PassRepeatlabale.setText("Comfirm Password");
        jPanel1.add(PassRepeatlabale);
        PassRepeatlabale.setBounds(480, 160, 210, 40);

        EmployeeUsernamelabale.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeUsernamelabale.setText("Employee User Name");
        jPanel1.add(EmployeeUsernamelabale);
        EmployeeUsernamelabale.setBounds(10, 110, 210, 40);

        EmployeeMobilelabale.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeMobilelabale.setText("Employee mobile");
        jPanel1.add(EmployeeMobilelabale);
        EmployeeMobilelabale.setBounds(480, 110, 210, 40);

        EmployeeAddressLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeAddressLabel.setText("Employee Address");
        jPanel1.add(EmployeeAddressLabel);
        EmployeeAddressLabel.setBounds(480, 60, 210, 40);

        EmployeeNamelabale.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeNamelabale.setText("Employee name");
        jPanel1.add(EmployeeNamelabale);
        EmployeeNamelabale.setBounds(10, 60, 210, 40);

        EmployeeUserNameText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeUserNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EmployeeUserNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeUserNameTextActionPerformed(evt);
            }
        });
        jPanel1.add(EmployeeUserNameText);
        EmployeeUserNameText.setBounds(230, 110, 240, 40);

        EmployeePasslabale1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeePasslabale1.setText("Employee Password");
        jPanel1.add(EmployeePasslabale1);
        EmployeePasslabale1.setBounds(10, 160, 210, 40);

        EmployeeAddressText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeAddressText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(EmployeeAddressText);
        EmployeeAddressText.setBounds(700, 60, 240, 40);

        EmployeeNameText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeNameText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(EmployeeNameText);
        EmployeeNameText.setBounds(230, 60, 240, 40);

        EmployeeMobileText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeMobileText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EmployeeMobileText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeMobileTextActionPerformed(evt);
            }
        });
        jPanel1.add(EmployeeMobileText);
        EmployeeMobileText.setBounds(700, 110, 240, 40);

        EmployeePassFild2.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeePassFild2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(EmployeePassFild2);
        EmployeePassFild2.setBounds(700, 160, 240, 40);

        EmployeePassFild1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeePassFild1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(EmployeePassFild1);
        EmployeePassFild1.setBounds(230, 160, 240, 40);

        ShowPass.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        ShowPass.setText("Show PassWord");
        ShowPass.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowPassActionPerformed(evt);
            }
        });
        jPanel1.add(ShowPass);
        ShowPass.setBounds(730, 200, 200, 23);

        EmpUpdate.setBackground(new java.awt.Color(234, 236, 238));
        EmpUpdate.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmpUpdate.setText("Update");
        EmpUpdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        EmpUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmpUpdate.setFocusPainted(false);
        EmpUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpUpdateActionPerformed(evt);
            }
        });
        jPanel1.add(EmpUpdate);
        EmpUpdate.setBounds(290, 220, 100, 28);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add/Update/Delete Employee Information");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        jPanel1.add(jLabel1);
        jLabel1.setBounds(150, 0, 820, 40);

        EmpDelet.setBackground(new java.awt.Color(234, 236, 238));
        EmpDelet.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmpDelet.setText("Delete");
        EmpDelet.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        EmpDelet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmpDelet.setFocusPainted(false);
        EmpDelet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpDeletActionPerformed(evt);
            }
        });
        jPanel1.add(EmpDelet);
        EmpDelet.setBounds(540, 220, 100, 28);

        EmpSave.setBackground(new java.awt.Color(234, 236, 238));
        EmpSave.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmpSave.setText("Add");
        EmpSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        EmpSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        EmpSave.setFocusPainted(false);
        EmpSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmpSaveActionPerformed(evt);
            }
        });
        jPanel1.add(EmpSave);
        EmpSave.setBounds(420, 220, 90, 28);

        Id.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Id.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        jPanel1.add(Id);
        Id.setBounds(0, 0, 150, 40);

        Employee.add(jPanel1);
        jPanel1.setBounds(10, 290, 960, 260);

        MainTabbpane.addTab("Employee", Employee);

        Product.setBackground(new java.awt.Color(24, 33, 43));
        Product.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(44, 53, 63), 1, true));
        Product.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(234, 236, 238));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jPanel2.setLayout(null);

        ProductCatagoryLabale.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        ProductCatagoryLabale.setText("Catagory");
        jPanel2.add(ProductCatagoryLabale);
        ProductCatagoryLabale.setBounds(20, 70, 160, 30);

        EmployeeMobilelabale1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeMobilelabale1.setText("Product price");
        jPanel2.add(EmployeeMobilelabale1);
        EmployeeMobilelabale1.setBounds(20, 170, 160, 30);

        EmployeeAddressLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeAddressLabel1.setText("Product Unit");
        jPanel2.add(EmployeeAddressLabel1);
        EmployeeAddressLabel1.setBounds(20, 120, 160, 30);

        EmployeeNamelabale1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        EmployeeNamelabale1.setText("Product discription");
        jPanel2.add(EmployeeNamelabale1);
        EmployeeNamelabale1.setBounds(460, 120, 162, 40);

        ProductPriceText.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        ProductPriceText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel2.add(ProductPriceText);
        ProductPriceText.setBounds(190, 170, 210, 30);

        proId.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        proId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        proId.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        jPanel2.add(proId);
        proId.setBounds(0, 0, 170, 40);

        Update.setBackground(new java.awt.Color(234, 236, 238));
        Update.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        Update.setText("Update");
        Update.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        Update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Update.setFocusPainted(false);
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        jPanel2.add(Update);
        Update.setBounds(338, 220, 80, 28);

        ProSave.setBackground(new java.awt.Color(234, 236, 238));
        ProSave.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        ProSave.setText("Add");
        ProSave.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        ProSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ProSave.setFocusPainted(false);
        ProSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProSaveActionPerformed(evt);
            }
        });
        jPanel2.add(ProSave);
        ProSave.setBounds(460, 220, 60, 28);

        UnitOption.setBackground(new java.awt.Color(234, 236, 238));
        UnitOption.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        UnitOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "sft", "rft", "nos", "Others" }));
        UnitOption.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        UnitOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnitOptionActionPerformed(evt);
            }
        });
        jPanel2.add(UnitOption);
        UnitOption.setBounds(190, 120, 210, 30);

        ProductDiscription.setBackground(new java.awt.Color(234, 236, 238));
        ProductDiscription.setColumns(20);
        ProductDiscription.setFont(new java.awt.Font("Comic Sans MS", 2, 16)); // NOI18N
        ProductDiscription.setLineWrap(true);
        ProductDiscription.setRows(5);
        ProductDiscription.setAutoscrolls(false);
        ProductDiscription.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        jScrollPane1.setViewportView(ProductDiscription);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(650, 70, 270, 130);

        CatagoryOption.setBackground(new java.awt.Color(234, 236, 238));
        CatagoryOption.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        CatagoryOption.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "none", "Civil Work", "Iron Work", "Wooden Work", "Steel Work", "Sanetary Work", "Plambing Work", "Electrical Work", "Landscap", "Others" }));
        CatagoryOption.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CatagoryOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatagoryOptionActionPerformed(evt);
            }
        });
        jPanel2.add(CatagoryOption);
        CatagoryOption.setBounds(190, 70, 210, 30);

        AddProduct1.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AddProduct1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddProduct1.setText("Add/Update/delete product ");
        AddProduct1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        jPanel2.add(AddProduct1);
        AddProduct1.setBounds(170, 0, 800, 40);

        ProDelet.setBackground(new java.awt.Color(234, 236, 238));
        ProDelet.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        ProDelet.setText("Delete");
        ProDelet.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        ProDelet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ProDelet.setFocusPainted(false);
        ProDelet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProDeletActionPerformed(evt);
            }
        });
        jPanel2.add(ProDelet);
        ProDelet.setBounds(570, 220, 58, 28);

        Product.add(jPanel2);
        jPanel2.setBounds(10, 280, 960, 260);

        ShowEmployeeData1.setBackground(new java.awt.Color(234, 236, 238));
        ShowEmployeeData1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        ShowEmployeeData1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowEmployeeData1.setLayout(null);

        AllProduct.setFont(new java.awt.Font("Comic Sans MS", 3, 18)); // NOI18N
        AllProduct.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AllProduct.setText("Select product to update/delete");
        AllProduct.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(24, 33, 43), 3, true));
        ShowEmployeeData1.add(AllProduct);
        AllProduct.setBounds(-10, 0, 980, 40);

        AdminProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl.no", " Discription", "Catagory", "Unit", "Price"
            }
        ));
        AdminProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AdminProductTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(AdminProductTable);

        ShowEmployeeData1.add(jScrollPane3);
        jScrollPane3.setBounds(0, 50, 960, 190);

        Product.add(ShowEmployeeData1);
        ShowEmployeeData1.setBounds(10, 20, 960, 240);

        MainTabbpane.addTab("Product", Product);

        MainTabbpane.setSelectedIndex(2);

        javax.swing.GroupLayout BackgroundPanalLayout = new javax.swing.GroupLayout(BackgroundPanal);
        BackgroundPanal.setLayout(BackgroundPanalLayout);
        BackgroundPanalLayout.setHorizontalGroup(
            BackgroundPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HadingPanal, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(MainTabbpane, javax.swing.GroupLayout.PREFERRED_SIZE, 1060, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        BackgroundPanalLayout.setVerticalGroup(
            BackgroundPanalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BackgroundPanalLayout.createSequentialGroup()
                .addComponent(HadingPanal, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(MainTabbpane, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BackgroundPanal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseClicked
        if (JOptionPane.showConfirmDialog(null, "Unsaved data will be lost\nWant to exit?") == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_ExitMouseClicked

    private void ExitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseEntered
        Exit.setForeground(new java.awt.Color(128, 0, 0));

    }//GEN-LAST:event_ExitMouseEntered

    private void ExitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitMouseExited
        Exit.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_ExitMouseExited

    private void minMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_minMouseClicked

    private void minMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseEntered
        min.setForeground(new java.awt.Color(128, 128, 128));
    }//GEN-LAST:event_minMouseEntered

    private void minMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minMouseExited
        min.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_minMouseExited

    private void EmployeeUserNameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeUserNameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeUserNameTextActionPerformed

    private void EmployeeMobileTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeMobileTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeMobileTextActionPerformed

    private void EmpUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpUpdateActionPerformed

        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyEmployeedata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("UPDATE `user` SET "
                        + "`EmployeeName`=?,"
                        + "`EmployeeAddress`=?,"
                        + "`mobile`=?,"
                        + "`Username`=?,"
                        + "`password`=? "
                        + "WHERE `id`=?");
                ps.setString(1, EmployeeNameText.getText());
                ps.setString(2, EmployeeAddressText.getText());
                ps.setString(3, EmployeeMobileText.getText());
                ps.setString(4, EmployeeUserNameText.getText());
                ps.setString(5, String.valueOf(EmployeePassFild2.getPassword()));
                ps.setString(6, Id.getText());

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) EmployeeInfoTable.getModel();
                    model.setRowCount(0);
                    ShowDataIntable();
                    JOptionPane.showMessageDialog(null, "Data Updated Succefully");

                    SetEmployeeNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }


    }//GEN-LAST:event_EmpUpdateActionPerformed

    private void ShowPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowPassActionPerformed
        if (ShowPass.isSelected()) {
            EmployeePassFild1.setEchoChar((char) 0);
            EmployeePassFild2.setEchoChar((char) 0);
        } else {
            EmployeePassFild1.setEchoChar('*');
            EmployeePassFild2.setEchoChar('*');
        }
    }//GEN-LAST:event_ShowPassActionPerformed

    private void CompanynameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompanynameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CompanynameTextActionPerformed

    private void CompanyAddressTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CompanyAddressTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CompanyAddressTextActionPerformed

    private void UserNamTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserNamTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserNamTextActionPerformed

    private void AdminPass2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminPass2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminPass2ActionPerformed

    private void AdminPass1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminPass1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdminPass1ActionPerformed
    private boolean varifyEmployeedata() {
        if (EmployeeNameText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty company name field");
            return false;
        } else if (EmployeeAddressText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty company address field");
            return false;
        } else if (EmployeeMobileText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Invalid mobile number");
            return false;
        } else if (EmployeeUserNameText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty user name field");
            return false;
        } else if (EmployeePassFild1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty password field");
            return false;
        } else if (!EmployeePassFild1.getText().equals(EmployeePassFild2.getText())) {
            JOptionPane.showMessageDialog(null, "Password not matched");

            return false;
        } else {
            return true;
        }
    }

    private boolean varifyCompanydata() {
        if (CompanynameText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty company name field");
            return false;
        } else if (CompanyAddressText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty company address field");
            return false;
        } else if (UserNamText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty user name field");
            return false;
        } else if (AdminPass1.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty password field");
            return false;
        } else if (!AdminPass1.getText().equals(AdminPass2.getText())) {
            JOptionPane.showMessageDialog(null, "Password not matched");

            return false;
        } else if (Imagepath == null) {
            JOptionPane.showMessageDialog(null, "No image selected");
            return false;
        } else {
            return true;
        }
    }

    private boolean varifyProductdata() {
        if (ProductDiscription.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Empty Product");
            return false;
        } else if (ProductPriceText.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Product price not set");
            return false;
        } else {
            return true;
        }
    }

    private void SetAdminNull() {
        CompanynameText.setText(null);
        CompanyAddressText.setText(null);
        UserNamText.setText(null);
        AdminPass1.setText(null);
        AdminPass2.setText(null);
        ShowAdminPass.setSelected(false);
        picSpace.setIcon(null);
    }
    private void UdateAdminProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UdateAdminProActionPerformed
        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyCompanydata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("UPDATE `admin` SET"
                        + "`CompanyName`=?,"
                        + "`CompanyAddress`=?,"
                        + "`UserName`=?,"
                        + "`Password`=?,"
                        + "`Logo`=? WHERE 1");
                ps.setString(1, CompanynameText.getText());
                ps.setString(2, CompanyAddressText.getText());
                ps.setString(3, UserNamText.getText());
                ps.setString(4, String.valueOf(AdminPass2.getPassword()));
                InputStream img = new FileInputStream(new File(Imagepath));
                ps.setBlob(5, img);
                if (ps.executeUpdate() != 0) {
                    JOptionPane.showMessageDialog(null, "done update");
                    SetAdminNull();

                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }
    }//GEN-LAST:event_UdateAdminProActionPerformed
    private ImageIcon resizepic(String picpath) {
        ImageIcon myimg = new ImageIcon(picpath);
        Image img = myimg.getImage().getScaledInstance(picSpace.getWidth() - 3, picSpace.getHeight() - 3, Image.SCALE_SMOOTH);
        ImageIcon mypic = new ImageIcon(img);
        return mypic;
    }
    private void AdminBrowsepicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdminBrowsepicActionPerformed
        JFileChooser filec = new JFileChooser();
        filec.setCurrentDirectory(new File(System.getProperty("user.home")));

        //file extention
        FileNameExtensionFilter filefilter = new FileNameExtensionFilter(".Images", "jpg", "png", "gif");
        filec.addChoosableFileFilter(filefilter);
        int filestate = filec.showSaveDialog(null);

        //if user select a file
        if (filestate == JFileChooser.APPROVE_OPTION) {
            File selectedfile = filec.getSelectedFile();
            String path = selectedfile.getAbsolutePath();
            Imagepath = path;
            // Display the image in jlavel

            picSpace.setIcon(resizepic(path));
        }
    }//GEN-LAST:event_AdminBrowsepicActionPerformed

    private void ShowAdminPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAdminPassActionPerformed
        if (ShowAdminPass.isSelected()) {
            AdminPass1.setEchoChar((char) 0);
            AdminPass2.setEchoChar((char) 0);
        } else {
            AdminPass1.setEchoChar('*');
            AdminPass2.setEchoChar('*');
        }
    }//GEN-LAST:event_ShowAdminPassActionPerformed

    private void UnitOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnitOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnitOptionActionPerformed

    private void CatagoryOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatagoryOptionActionPerformed
        DefaultTableModel model = (DefaultTableModel) AdminProductTable.getModel();
                    model.setRowCount(0);
                    ShowDataInproducttable();
    }//GEN-LAST:event_CatagoryOptionActionPerformed
    private void SetProductNull() {
        ProductDiscription.setText(null);
        UnitOption.setSelectedIndex(0);
        ProductPriceText.setText(null);
    }
    private void ProSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProSaveActionPerformed

        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyProductdata()) {
            try {
                //INSERT INTO `product`(`id`, , , , ) VALUES ([value-1],[value-2],[value-3],[value-4],[value-5])
                ps = (PreparedStatement) con.prepareStatement("INSERT INTO `product`"
                        + "(  `Discription`, "
                        + "`Catagory`, `unit`, "
                        + "`price`) "
                        + "VALUES (?,?,?,?)");
                ps.setString(1, ProductDiscription.getText());
                ps.setString(2, (String) CatagoryOption.getSelectedItem());
                ps.setString(3, (String) UnitOption.getSelectedItem());
                ps.setString(4, ProductPriceText.getText());

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) AdminProductTable.getModel();
                    model.setRowCount(0);
                    ShowDataInproducttable();
                    JOptionPane.showMessageDialog(null, "Data Added Succefully");

                    SetProductNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }


    }//GEN-LAST:event_ProSaveActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        
        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyProductdata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("UPDATE `product` SET `Discription`=?, `Catagory`=?, `unit`=?, `price`=? WHERE `id`=?");
                ps.setString(1, ProductDiscription.getText());
                ps.setString(2, (String) CatagoryOption.getSelectedItem());
                ps.setString(3, (String) UnitOption.getSelectedItem());
                ps.setString(4, ProductPriceText.getText());
                ps.setString(5, proId.getText());

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) AdminProductTable.getModel();
                    model.setRowCount(0);
                    ShowDataInproducttable();
                    JOptionPane.showMessageDialog(null, "Data Updated Succefully");

                    SetProductNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }
        
    }//GEN-LAST:event_UpdateActionPerformed
    private void SetEmployeeNull() {
        EmployeeNameText.setText(null);
        EmployeeAddressText.setText(null);
        EmployeeMobileText.setText(null);
        EmployeeUserNameText.setText(null);
        EmployeePassFild1.setText(null);
        EmployeePassFild2.setText(null);
        ShowPass.setSelected(false);
    }
    private void EmpSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpSaveActionPerformed
        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyEmployeedata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("INSERT INTO `user`"
                        + "( `EmployeeName`, "
                        + "`EmployeeAddress`, "
                        + "`mobile`, `Username`, "
                        + "`password`) "
                        + "VALUES (?,?,?,?,?)");
                ps.setString(1, EmployeeNameText.getText());
                ps.setString(2, EmployeeAddressText.getText());
                ps.setString(3, EmployeeMobileText.getText());
                ps.setString(4, EmployeeUserNameText.getText());
                ps.setString(5, String.valueOf(EmployeePassFild2.getPassword()));

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) EmployeeInfoTable.getModel();
                    model.setRowCount(0);
                    ShowDataIntable();
                    JOptionPane.showMessageDialog(null, "Data Added Succefully");

                    SetEmployeeNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }


    }//GEN-LAST:event_EmpSaveActionPerformed

    private void EmpDeletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmpDeletActionPerformed

        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyEmployeedata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("DELETE FROM `user` WHERE `id`=?");
                ps.setString(1, Id.getText());

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) EmployeeInfoTable.getModel();
                    model.setRowCount(0);
                    ShowDataIntable();
                    JOptionPane.showMessageDialog(null, "Data Deleted Succefully");

                    SetEmployeeNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }

        
    }//GEN-LAST:event_EmpDeletActionPerformed

    private void AdminLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminLogoutMouseClicked
        if (JOptionPane.showConfirmDialog(null, "Unsaved data will be lost\nWant to Logout?") == 0) {
            Login lin = new Login();
            lin.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_AdminLogoutMouseClicked

    private void AdminLogoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminLogoutMouseEntered
        AdminLogout.setForeground(new java.awt.Color(128, 0, 0));
    }//GEN-LAST:event_AdminLogoutMouseEntered

    private void AdminLogoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminLogoutMouseExited
        AdminLogout.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_AdminLogoutMouseExited

    private void EmployeeInfoTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EmployeeInfoTableMouseClicked
        int i = EmployeeInfoTable.getSelectedRow();

        TableModel model = EmployeeInfoTable.getModel();
        Id.setText(model.getValueAt(i, 0).toString());
        EmployeeNameText.setText(model.getValueAt(i, 1).toString());

        EmployeeAddressText.setText(model.getValueAt(i, 2).toString());
        EmployeeMobileText.setText(model.getValueAt(i, 3).toString());
        EmployeeUserNameText.setText(model.getValueAt(i, 4).toString());

        EmployeePassFild1.setText(model.getValueAt(i, 5).toString());
        EmployeePassFild2.setText(model.getValueAt(i, 5).toString());
    }//GEN-LAST:event_EmployeeInfoTableMouseClicked

    private void AdminProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AdminProductTableMouseClicked
        int i = AdminProductTable.getSelectedRow();
        TableModel model = AdminProductTable.getModel();
        proId.setText(model.getValueAt(i, 0).toString()); 
        ProductDiscription.setText(model.getValueAt(i, 1).toString());        
        CatagoryOption.setSelectedItem(model.getValueAt(i, 2).toString());
        UnitOption.setSelectedItem(model.getValueAt(i, 3).toString());
        ProductPriceText.setText(model.getValueAt(i, 4).toString());
        
    }//GEN-LAST:event_AdminProductTableMouseClicked

    private void ProDeletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProDeletActionPerformed
        Connection con = DBConnection.getConnection();
        PreparedStatement ps;

        if (varifyProductdata()) {
            try {
                ps = (PreparedStatement) con.prepareStatement("DELETE FROM `product` WHERE `id`=?");
                ps.setString(1, proId.getText());

                if (ps.executeUpdate() != 0) {
                    DefaultTableModel model = (DefaultTableModel) AdminProductTable.getModel();
                    model.setRowCount(0);
                    ShowDataInproducttable();
                    JOptionPane.showMessageDialog(null, "Data Deleted Succefully");

                    SetProductNull();
                } else {
                    JOptionPane.showMessageDialog(null, "Something wrong");
                }
            } catch (Exception ex) {
                Logger.getLogger(ex.getMessage());
            }

        }
    }//GEN-LAST:event_ProDeletActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddProduct1;
    private javax.swing.JButton AdminBrowsepic;
    private javax.swing.JLabel AdminLogout;
    private javax.swing.JLabel AdminPass;
    private javax.swing.JPasswordField AdminPass1;
    private javax.swing.JPasswordField AdminPass2;
    private javax.swing.JTable AdminProductTable;
    private javax.swing.JPanel AdminTabbHader;
    private javax.swing.JLabel AdminUserName;
    private javax.swing.JLabel AllProduct;
    private javax.swing.JPanel BackgroundPanal;
    private javax.swing.JComboBox<String> CatagoryOption;
    private javax.swing.JLabel Clogo;
    private javax.swing.JLabel CompanyAdd;
    private javax.swing.JTextField CompanyAddressText;
    private javax.swing.JLabel CompanyName;
    private javax.swing.JTextField CompanynameText;
    private javax.swing.JLabel Conpass;
    private javax.swing.JLabel CreateProfileHading;
    private javax.swing.JButton EmpDelet;
    private javax.swing.JButton EmpSave;
    private javax.swing.JButton EmpUpdate;
    private javax.swing.JPanel Employee;
    private javax.swing.JLabel EmployeeAddressLabel;
    private javax.swing.JLabel EmployeeAddressLabel1;
    private javax.swing.JTextField EmployeeAddressText;
    private javax.swing.JTable EmployeeInfoTable;
    private javax.swing.JTextField EmployeeMobileText;
    private javax.swing.JLabel EmployeeMobilelabale;
    private javax.swing.JLabel EmployeeMobilelabale1;
    private javax.swing.JTextField EmployeeNameText;
    private javax.swing.JLabel EmployeeNamelabale;
    private javax.swing.JLabel EmployeeNamelabale1;
    private javax.swing.JPasswordField EmployeePassFild1;
    private javax.swing.JPasswordField EmployeePassFild2;
    private javax.swing.JLabel EmployeePasslabale1;
    private javax.swing.JTextField EmployeeUserNameText;
    private javax.swing.JLabel EmployeeUsernamelabale;
    private javax.swing.JLabel Exit;
    private javax.swing.JPanel HadingPanal;
    private javax.swing.JLabel Id;
    private javax.swing.JPanel MainPanal;
    private javax.swing.JTabbedPane MainTabbpane;
    private javax.swing.JLabel PassRepeatlabale;
    private javax.swing.JButton ProDelet;
    private javax.swing.JButton ProSave;
    private javax.swing.JPanel Product;
    private javax.swing.JLabel ProductCatagoryLabale;
    private javax.swing.JTextArea ProductDiscription;
    private javax.swing.JTextField ProductPriceText;
    private javax.swing.JLabel Q1;
    private javax.swing.JLabel Q2;
    private javax.swing.JCheckBox ShowAdminPass;
    private javax.swing.JPanel ShowEmployeeData;
    private javax.swing.JPanel ShowEmployeeData1;
    private javax.swing.JCheckBox ShowPass;
    private javax.swing.JButton UdateAdminPro;
    private javax.swing.JComboBox<String> UnitOption;
    private javax.swing.JButton Update;
    private javax.swing.JTextField UserNamText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel min;
    private javax.swing.JLabel picSpace;
    private javax.swing.JLabel proId;
    private javax.swing.JPanel profile;
    // End of variables declaration//GEN-END:variables
}
